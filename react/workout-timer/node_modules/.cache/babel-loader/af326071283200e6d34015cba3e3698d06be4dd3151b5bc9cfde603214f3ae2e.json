{"ast":null,"code":"var _jsxFileName = \"/Users/art/code/study/react/workout-timer/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Calculator from \"./Calculator\";\nimport ToggleSounds from \"./ToggleSounds\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allowSound, setAllowSound] = useState(true);\n  const [time, setTime] = useState(formatTime(new Date()));\n\n  // Will be be AM or PM\n  const partOfDay = time.slice(-2);\n  const workouts = [{\n    name: \"Full-body workout\",\n    numExercises: partOfDay === \"AM\" ? 9 : 8\n  }, {\n    name: \"Arms + Legs\",\n    numExercises: 6\n  }, {\n    name: \"Arms only\",\n    numExercises: 3\n  }, {\n    name: \"Legs only\",\n    numExercises: 4\n  }, {\n    name: \"Core only\",\n    numExercises: partOfDay === \"AM\" ? 5 : 4\n  }];\n  function formatTime(date) {\n    return new Intl.DateTimeFormat(\"en\", {\n      month: \"short\",\n      year: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\"\n    }).format(date);\n  }\n  useEffect(function () {\n    const id = setInterval(function () {\n      setTime(formatTime(new Date()));\n    }, 1000);\n    return () => clearInterval(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Workout timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: [\"For your workout on \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleSounds, {\n      allowSound: allowSound,\n      setAllowSound: setAllowSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n      workouts: workouts,\n      allowSound: allowSound\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2OYf2RizELL7uxpzCaQrJRlWQLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Calculator","ToggleSounds","jsxDEV","_jsxDEV","App","_s","allowSound","setAllowSound","time","setTime","formatTime","Date","partOfDay","slice","workouts","name","numExercises","date","Intl","DateTimeFormat","month","year","hour","minute","second","format","id","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/art/code/study/react/workout-timer/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Calculator from \"./Calculator\";\nimport ToggleSounds from \"./ToggleSounds\";\n\nfunction App() {\n  const [allowSound, setAllowSound] = useState(true);\n  const [time, setTime] = useState(formatTime(new Date()));\n\n  // Will be be AM or PM\n  const partOfDay = time.slice(-2);\n\n  const workouts = [\n    {\n      name: \"Full-body workout\",\n      numExercises: partOfDay === \"AM\" ? 9 : 8,\n    },\n    {\n      name: \"Arms + Legs\",\n      numExercises: 6,\n    },\n    {\n      name: \"Arms only\",\n      numExercises: 3,\n    },\n    {\n      name: \"Legs only\",\n      numExercises: 4,\n    },\n    {\n      name: \"Core only\",\n      numExercises: partOfDay === \"AM\" ? 5 : 4,\n    },\n  ];\n\n  function formatTime(date) {\n    return new Intl.DateTimeFormat(\"en\", {\n      month: \"short\",\n      year: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n    }).format(date);\n  }\n\n  useEffect(function () {\n    const id = setInterval(function () {\n      setTime(formatTime(new Date()));\n    }, 1000);\n\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <main>\n      <h1>Workout timer</h1>\n      <time>For your workout on {time}</time>\n      <ToggleSounds allowSound={allowSound} setAllowSound={setAllowSound} />\n      <Calculator workouts={workouts} allowSound={allowSound} />\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACW,UAAU,CAAC,IAAIC,IAAI,EAAE,CAAC,CAAC;;EAExD;EACA,MAAMC,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;EAEhC,MAAMC,QAAQ,GAAG,CACf;IACEC,IAAI,EAAE,mBAAmB;IACzBC,YAAY,EAAEJ,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG;EACzC,CAAC,EACD;IACEG,IAAI,EAAE,aAAa;IACnBC,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,WAAW;IACjBC,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,WAAW;IACjBC,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,WAAW;IACjBC,YAAY,EAAEJ,SAAS,KAAK,IAAI,GAAG,CAAC,GAAG;EACzC,CAAC,CACF;EAED,SAASF,UAAUA,CAACO,IAAI,EAAE;IACxB,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,IAAI,EAAE;MACnCC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC,CAACC,MAAM,CAACR,IAAI,CAAC;EACjB;EAEAnB,SAAS,CAAC,YAAY;IACpB,MAAM4B,EAAE,GAAGC,WAAW,CAAC,YAAY;MACjClB,OAAO,CAACC,UAAU,CAAC,IAAIC,IAAI,EAAE,CAAC,CAAC;IACjC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMiB,aAAa,CAACF,EAAE,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtB9B,OAAA;MAAA0B,QAAA,GAAM,sBAAoB,EAACrB,IAAI;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvC9B,OAAA,CAACF,YAAY;MAACK,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA;IAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtE9B,OAAA,CAACH,UAAU;MAACc,QAAQ,EAAEA,QAAS;MAACR,UAAU,EAAEA;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrD;AAEX;AAAC5B,EAAA,CAxDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}